# Copyright 2023 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: import-vulnerabilities

on:
  workflow_call:
    inputs:
      image_digest:
        description: 'Fully-qualified image uri (repo/image@digest)'
        required: true
        type: string
      auth_provider:
        description: 'OIDC provider ID'
        required: true
        type: string
      auth_user:
        description: 'OIDC user ID'
        required: true
        type: string
      target_project:
        description: 'Target project ID where vulnerability scan will be imported'
        required: true
        type: string
      report_path:
        description: 'Path to vulnerability scan report'
        type: string
        default: 'report.json'

permissions:
  contents: read

jobs:
  import:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      id-token: write
    steps:

    - name: Checkout Code
      uses: actions/checkout@24cb9080177205b6e8c946b17badbe402adc938f  # v3.4.0

    - id: auth
      name: Auth GCP
      uses: google-github-actions/auth@ef5d53e30bbcd8d0836f4288f5e50ff3e086997d  # v1.0.0
      with:
        token_format: "access_token"
        workload_identity_provider: ${{ inputs.auth_provider }}
        service_account: ${{ inputs.auth_user }}

    # Scan the image for vulnerabilities using Trivy
    - id: scan
      name: Vulnerability Scan
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ${{ inputs.image_digest }}
        scanners: vuln
        format: json
        output: ${{ inputs.report_path }}
        timeout: 5m
        hide-progress: true

    # Import the vulnerability scan report to Google Container Analysis
    # Note: In this one repo only, do not pin this action by commit as
    #       that will create never-ending loop of new dependabot PRs
    #       which, you guest it, create a new commit hash.
    - uses: GoogleCloudPlatform/aactl@main
      with:
        project: ${{ inputs.target_project }}
        digest: ${{ inputs.image_digest }}
        file: ${{ inputs.report_path }}
        format: trivy
